package talk.manachar;/** * 给定一个 str, 求在此字符串的后面添加几个字符即可全部变为回文字符串 * *    解: 只需找到包含之后一个字符串的最长回文子串即可 */public class AddShortestEnd {    public static String addShortestEnd(String str){        if (str == null || str.length() < 1){            return "";        }        char[] chars = str.toCharArray();        char[] manacharString = manacharString(chars);        //回文半径数组        int[] pArr = new int[manacharString.length];        int C = -1;        int R = -1;        int endIndex = 0;        for (int i = 0; i < manacharString.length; i++) {            pArr[i] = R > i ? Math.min(R - i, pArr[2 * C - i]) : 1;            while (i + pArr[i] < manacharString.length && i - pArr[i] > -1){                if (manacharString[i + pArr[i]] == manacharString[i - pArr[i]]){                    pArr[i]++;                }else {                    break;                }            }            if (i + pArr[i] > R){                R = i + pArr[i];                C = i;                //当 R == manacharString.length 时,已经包含了最后一个字符,                if (R == manacharString.length){                    endIndex = str.length() - pArr[i];                    char[] res = new char[endIndex + 1];                    int index = 0;                    while (endIndex >= 0){                        res[index++] = chars[endIndex--];                    }                    return String.valueOf(res);                }            }        }        return "";    }    private static char[] manacharString(char[] str){        char[] res = new char[(str.length << 1) + 1];        int index = 0;        for (int i = 0; i < res.length; i++) {            res[i] = (i & 1) == 0 ? '#' : str[index++];        }        return res;    }    public static void main(String[] args) {        String str = "abcd12321";        System.out.println(addShortestEnd(str));    }}